%
% irpCreateOBJ creates OBJ data (=triangle meshes) from the 3d points
% generated by irpGetObject3D.
%
% Usage:
%    DataOBJ = irpCreateOBJ(Points3D); (to create a variabel which can be
%                                       visualized within Matlab with irpVisualizeOBJ)
%
%    irpCreateOBJ(Points3D,'filename.obj'); (to create an OBJ-File which
%                                            can be opened with the
%                                            external program "MeshLab"
% 

function DataOBJ = irpCreateOBJ(Points3D,filename)

x_data = Points3D(:,:,1);
y_data = Points3D(:,:,2);
z_data = Points3D(:,:,3);

vert_pos = find(z_data); %% only if z_data is set, Points3D is different from [0 0 0]
vert_mask = z_data~=0;

vertices = zeros(size(vert_pos,1),3);

for i=1:size(vert_pos,1)
    vertices(i,1) = x_data(vert_pos(i));
    vertices(i,2) = y_data(vert_pos(i));
    vertices(i,3) = z_data(vert_pos(i));
end

y_res = size(z_data,1);
x_res = size(z_data,2);

face = zeros(2*size(vertices,1),3);
face_pos = 1;
vert_pos_pos = 1;
for x=1:x_res
    for y=1:y_res
        index = (x-1)*y_res+y;
        if vert_pos(vert_pos_pos)==index
            
             if y<y_res && x>1
                 if z_data(y+1,x-1) && z_data(y+1,x)
                     index2 = index-y_res+1;
                     tmp_face(1) = vert_pos_pos;
                     
                     % find process very time consuming, therefore
                     % narrow search field
                     find_start = vert_pos_pos-y_res;
                     if find_start<1 
                         find_start = 1; 
                     end
                     tmp_face(2) = find(vert_pos(find_start:vert_pos_pos)==index2);
                     tmp_face(2) = tmp_face(2)+find_start-1;
                     
                     tmp_face(3) = vert_pos_pos+1;
                     face(face_pos,:) = tmp_face;
                     face_pos = face_pos+1;
                 end
             end
            
             if y<y_res && x<x_res
                 if z_data(y+1,x) && z_data(y,x+1)
                     index3 = index+y_res;
                     tmp_face(1) = vert_pos_pos;
                     tmp_face(2) = vert_pos_pos+1;
                     
                     % find process very time consuming, therefore
                     % narrow search field
                     find_end = vert_pos_pos+y_res;
                     if find_end>size(vert_pos,1)
                         find_end = size(vert_pos,1);
                     end
                     tmp_face(3) = find(vert_pos(vert_pos_pos:find_end)==index3);
                     tmp_face(3) = tmp_face(3)+vert_pos_pos-1;
                                    
                     face(face_pos,:) = tmp_face;
                     face_pos = face_pos+1;                
                 end
             end

            if vert_pos_pos < size(vert_pos,1)
                vert_pos_pos = vert_pos_pos+1;
            end

        end
    end
end

face = face(1:find(face==0,1)-1,:); % cut zero elements

DataOBJ{1} = vertices;
DataOBJ{2} = face;

if nargin>1
    fid = fopen(filename,'w');
    for i=1:size(vertices,1)
        fprintf(fid,'v ');
        fprintf(fid,'%d %d %d',vertices(i,:));
        fprintf(fid,'\n');
    end
    for i=1:size(face,1)
        fprintf(fid,'f ');
        fprintf(fid,'%d %d %d',face(i,:));
        fprintf(fid,'\n');
    end
    fclose(fid);
end
